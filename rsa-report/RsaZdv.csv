# prelude: .
# output_dir: search-report-compcert
# verbose: 0
# progress: True
# read_progress: False
# hardfail: False
# context_filter: None
# weightsfile: /home/zoe/Desktop/proverbot9001/bench/../data/polyarg-weights-compcert.dat
# predictor: None
# truncate_semicolons: True
# search_width: 5
# max_attempts: 10
# search_depth: 6
# hard_depth_limit: 200
# resume: True
# overwrite_mismatch: False
# max_print_term: None
# max_print_hyps: None
# max_print_subgoals: 2
# max_proof_time: 300
# max_tactic_time: 2
# linearize: False
# proof_times: None
# filenames: [PosixPath2('Fermat.v'), PosixPath2('Binomials.v'), PosixPath2('Rsa.v'), PosixPath2('MiscRsa.v'), PosixPath2('Divides.v')]
# use_hammer: False
# check_consistent: True
# show_failing_predictions: False
# count_failing_predictions: False
# count_softfail_predictions: False
# careful: False
# relevant_lemmas: local
# command_limit: None
# proof: None
# log_anomalies: None
# log_hard_anomalies: None
# num_threads: 4
Lemma gcd_pq_SO : is_gcd p q 1.,INCOMPLETE,14
"Lemma Chinese :
 forall a b : nat,
 b <= a -> congruent p a b -> congruent q a b -> congruent (p * q) a b.",INCOMPLETE,34
"Lemma prime_2_or_more : forall r : nat, prime r -> r = 2 \/ 2 < r.",INCOMPLETE,17
Lemma phi_gt_SO : 1 < pq.,INCOMPLETE,59
"Theorem rsa_correct :
 forall w : nat, congruent (p * q) (decrypt (encrypt w)) w.",INCOMPLETE,121
"Theorem rsa_correct' :
 forall w : nat, congruent (p * q) (decrypt d (encrypt e w)) w.",INCOMPLETE,81
