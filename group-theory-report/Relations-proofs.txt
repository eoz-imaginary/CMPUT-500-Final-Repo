[["Relations.v", "", "\nTheorem sym_not_P :\n forall (U : Type) (P : Relation U) (x y : U),\n Symmetric U P -> ~ P x y -> ~ P y x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (U : Type) (P : Relation U) (x y : U) (_ : Symmetric U P)\n  (_ : not (P x y)), not (P y x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (U : Type) (P : Relation U) (x y : U) (_ : Symmetric U P)\n  (_ : not (P x y)), not (P y x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "red.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : not (P x y)", "H : Symmetric U P", "x,y : U", "P : Relation U", "U : Type"], "goal": "not (P y x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : not (P x y)", "H : Symmetric U P", "x,y : U", "P : Relation U", "U : Type"], "goal": "forall _ : P y x, False"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "elim H0.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : P y x", "H0 : not (P x y)", "H : Symmetric U P", "x,y : U", "P : Relation U", "U : Type"], "goal": "False"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : P y x", "H0 : not (P x y)", "H : Symmetric U P", "x,y : U", "P : Relation U", "U : Type"], "goal": "P x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Relations.v", "", "\nTheorem Equiv_from_order :\n forall (U : Type) (R : Relation U),\n Order U R -> Equivalence U (fun x y : U => R x y /\\ R y x).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (U : Type) (R : Relation U) (_ : Order U R),\nEquivalence U (fun x y : U => and (R x y) (R y x))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (U : Type) (R : Relation U) (_ : Order U R),\nEquivalence U (fun x y : U => and (R x y) (R y x))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
