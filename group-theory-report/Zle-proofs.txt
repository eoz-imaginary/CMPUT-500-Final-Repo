[["Z/Zle.v", "Zle.", "\nLemma sign_absZ : forall x : Z, leZ OZ (absZ x).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, leZ OZ (absZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, leZ OZ (absZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold leZ.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "leZ OZ (absZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "match absZ x with\n| neg _ => False\n| _ => True\nend"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "match absZ OZ with\n| neg _ => False\n| _ => True\nend"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (pos n) with\n| neg _ => False\n| _ => True\nend"}, {"hypotheses": ["n : nat"], "goal": "match absZ (neg n) with\n| neg _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "True"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (pos n) with\n| neg _ => False\n| _ => True\nend"}, {"hypotheses": ["n : nat"], "goal": "match absZ (neg n) with\n| neg _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (pos n) with\n| neg _ => False\n| _ => True\nend"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (neg n) with\n| neg _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "True"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (neg n) with\n| neg _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "match absZ (neg n) with\n| neg _ => False\n| _ => True\nend"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "True"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma tech_le_pos_abs : forall x : Z, leZ OZ x -> absZ x = x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : leZ OZ x), eq (absZ x) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : leZ OZ x), eq (absZ x) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ x", "x : Z"], "goal": "eq (absZ x) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ OZ"], "goal": "eq (absZ OZ) OZ"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "eq (absZ (pos n)) (pos n)"}, {"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "eq (absZ (neg n)) (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "eq (absZ (pos n)) (pos n)"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "eq (absZ (neg n)) (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "eq (absZ (neg n)) (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct H.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "eq (pos n) (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nTheorem leZ_antisymmetric : forall x y : Z, leZ x y -> leZ y x -> x = y.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : leZ x y) (_ : leZ y x), eq x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold leZ.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : leZ x y) (_ : leZ y x), eq x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z)\n  (_ : match x with\n       | OZ => match y with\n               | neg _ => False\n               | _ => True\n               end\n       | pos n => match y with\n                  | pos m => le n m\n                  | _ => False\n                  end\n       | neg n => match y with\n                  | neg m => le m n\n                  | _ => True\n                  end\n       end)\n  (_ : match y with\n       | OZ => match x with\n               | neg _ => False\n               | _ => True\n               end\n       | pos n => match x with\n                  | pos m => le n m\n                  | _ => False\n                  end\n       | neg n => match x with\n                  | neg m => le m n\n                  | _ => True\n                  end\n       end), eq x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (y : Z) (_ : match y with\n                    | neg _ => False\n                    | _ => True\n                    end)\n  (_ : match y with\n       | pos _ => False\n       | _ => True\n       end), eq OZ y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (_ : True) (_ : True), eq OZ OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (_ : True) (_ : False), eq OZ (pos n)"}, {"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H,H0 : True"], "goal": "eq OZ OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : True) (_ : False), eq OZ (pos n)"}, {"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : True) (_ : False), eq OZ (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : False", "H : True", "n : nat"], "goal": "eq OZ (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : False", "H : True"], "goal": "eq OZ (pos O)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["H0 : False", "H : True", "n : nat"], "goal": "eq OZ (pos (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : False", "H : True", "n : nat"], "goal": "eq OZ (pos (S n))"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq OZ (neg n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct H.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : True", "H : False", "n : nat"], "goal": "eq OZ (neg n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | pos m => le n m\n                    | _ => False\n                    end)\n  (_ : match y with\n       | pos n0 => le n0 n\n       | _ => True\n       end), eq (pos n) y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n n0) (_ : le n0 n), eq (pos n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct H.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : True", "H : False", "n : nat"], "goal": "eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n n0) (_ : le n0 n), eq (pos n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n n0) (_ : le n0 n), eq (pos n) (pos n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["n0 : nat"], "goal": "forall (_ : le O n0) (_ : le n0 O), eq (pos O) (pos n0)"}], "bg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le (S n) n0) (_ : le n0 (S n)), eq (pos (S n)) (pos n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le (S n) n0) (_ : le n0 (S n)), eq (pos (S n)) (pos n0)"}], "bg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "tauto.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : False) (_ : True), eq (pos n) (neg n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : match y with\n                    | neg m => le m n\n                    | _ => True\n                    end)\n  (_ : match y with\n       | neg n0 => le n n0\n       | _ => False\n       end), eq (neg n) y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "tauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : True) (_ : False), eq (neg n) OZ"}], "bg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : True) (_ : False), eq (neg n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n0 n) (_ : le n n0), eq (neg n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "tauto.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : True) (_ : False), eq (neg n) (pos n0)"}], "bg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n0 n) (_ : le n n0), eq (neg n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n0 n) (_ : le n n0), eq (neg n) (neg n0)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["n0 : nat"], "goal": "forall (_ : le n0 O) (_ : le O n0), eq (neg O) (neg n0)"}], "bg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n0 (S n)) (_ : le (S n) n0), eq (neg (S n)) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : le n0 (S n)) (_ : le (S n) n0), eq (neg (S n)) (neg n0)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma tech_posOZ_pos : forall n : nat, leZ OZ (posOZ n).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, leZ OZ (posOZ n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, leZ OZ (posOZ n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "leZ OZ (posOZ n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "leZ OZ (posOZ O)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "leZ OZ (posOZ (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "True"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "leZ OZ (posOZ (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "econstructor.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "leZ OZ (posOZ (S n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma le_opp_OZ_l : forall x : Z, leZ OZ x -> leZ (oppZ x) OZ.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : leZ OZ x), leZ (oppZ x) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : leZ OZ x), leZ (oppZ x) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "red.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ x", "x : Z"], "goal": "leZ (oppZ x) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ x", "x : Z"], "goal": "match oppZ x with\n| pos _ => False\n| _ => True\nend"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ OZ"], "goal": "match oppZ OZ with\n| pos _ => False\n| _ => True\nend"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "match oppZ (pos n) with\n| pos _ => False\n| _ => True\nend"}, {"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "match oppZ (neg n) with\n| pos _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ OZ"], "goal": "True"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "match oppZ (pos n) with\n| pos _ => False\n| _ => True\nend"}, {"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "match oppZ (neg n) with\n| pos _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "match oppZ (pos n) with\n| pos _ => False\n| _ => True\nend"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "match oppZ (neg n) with\n| pos _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (pos n)", "n : nat"], "goal": "True"}], "bg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "match oppZ (neg n) with\n| pos _ => False\n| _ => True\nend"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "match oppZ (neg n) with\n| pos _ => False\n| _ => True\nend"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : leZ OZ (neg n)", "n : nat"], "goal": "False"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma le_opp_OZ :\n forall x y : Z, x = oppZ y -> leZ OZ x -> leZ OZ y -> x = OZ.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)) (_ : leZ OZ x) (_ : leZ OZ y),\neq x OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction x.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)) (_ : leZ OZ x) (_ : leZ OZ y),\neq x OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (y : Z) (_ : eq OZ (oppZ y)) (_ : leZ OZ OZ) (_ : leZ OZ y),\neq OZ OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) OZ"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : leZ OZ y", "H0 : leZ OZ OZ", "H : eq OZ (oppZ y)", "y : Z"], "goal": "eq OZ OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) OZ"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : True)\n  (_ : match y with\n       | neg _ => False\n       | _ => True\n       end), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : eq (pos n) (oppZ OZ)) (_ : True) (_ : True), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "rewrite H.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (oppZ OZ)", "n : nat"], "goal": "eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (oppZ OZ)", "n : nat"], "goal": "eq (oppZ OZ) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (neg n0)) (_ : True) (_ : True), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "congruence.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (neg n0)", "n,n0 : nat"], "goal": "eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "tauto.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (pos n0)) (_ : True) (_ : False), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : False)\n  (_ : match y with\n       | neg _ => False\n       | _ => True\n       end), eq (neg n) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "apply tech_lt_abs_OZ.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : match y with\n| neg _ => False\n| _ => True\nend", "H0 : False", "H : eq (neg n) (oppZ y)", "y : Z", "n : nat"], "goal": "eq (neg n) OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "easy.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : match y with\n| neg _ => False\n| _ => True\nend", "H0 : False", "H : eq (neg n) (oppZ y)", "y : Z", "n : nat"], "goal": "lt_absZ (neg n) (pos O)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLet opp_inv : forall x y : Z, x = oppZ y -> y = oppZ x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)), eq y (oppZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)), eq y (oppZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "rewrite H.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ y)", "x,y : Z"], "goal": "eq y (oppZ x)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold oppZ.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ y)", "x,y : Z"], "goal": "eq y (oppZ (oppZ y))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ y)", "x,y : Z"], "goal": "eq y\n  match\n    match y with\n    | OZ => OZ\n    | pos n => neg n\n    | neg n => pos n\n    end\n  with\n  | OZ => OZ\n  | pos n => neg n\n  | neg n => pos n\n  end"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ OZ)", "x : Z"], "goal": "eq OZ OZ"}], "bg_goals": [{"hypotheses": ["H : eq x (oppZ (pos n))", "n : nat", "x : Z"], "goal": "eq (pos n) (pos n)"}, {"hypotheses": ["H : eq x (oppZ (neg n))", "n : nat", "x : Z"], "goal": "eq (neg n) (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ (pos n))", "n : nat", "x : Z"], "goal": "eq (pos n) (pos n)"}], "bg_goals": [{"hypotheses": ["H : eq x (oppZ (neg n))", "n : nat", "x : Z"], "goal": "eq (neg n) (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : eq x (oppZ (neg n))", "n : nat", "x : Z"], "goal": "eq (neg n) (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma le_opp_OZ2 :\n forall x y : Z, x = oppZ y -> leZ OZ x -> leZ OZ y -> x = y.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)) (_ : leZ OZ x) (_ : leZ OZ y),\neq x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction x.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x y : Z) (_ : eq x (oppZ y)) (_ : leZ OZ x) (_ : leZ OZ y),\neq x y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (y : Z) (_ : eq OZ (oppZ y)) (_ : leZ OZ OZ) (_ : leZ OZ y),\neq OZ y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : leZ OZ y", "H0 : leZ OZ OZ", "H : eq OZ (oppZ y)", "y : Z"], "goal": "eq OZ y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : leZ OZ OZ", "H : eq OZ (oppZ OZ)"], "goal": "eq OZ OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["H1 : leZ OZ (pos n)", "H0 : leZ OZ OZ", "H : eq OZ (oppZ (pos n))", "n : nat"], "goal": "eq OZ (pos n)"}, {"hypotheses": ["H1 : leZ OZ (neg n)", "H0 : leZ OZ OZ", "H : eq OZ (oppZ (neg n))", "n : nat"], "goal": "eq OZ (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "try discriminate.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : leZ OZ (pos n)", "H0 : leZ OZ OZ", "H : eq OZ (oppZ (pos n))", "n : nat"], "goal": "eq OZ (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["H1 : leZ OZ (neg n)", "H0 : leZ OZ OZ", "H : eq OZ (oppZ (neg n))", "n : nat"], "goal": "eq OZ (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "try discriminate.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : leZ OZ (neg n)", "H0 : leZ OZ OZ", "H : eq OZ (oppZ (neg n))", "n : nat"], "goal": "eq OZ (neg n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}, {"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : leZ OZ (pos n))\n  (_ : leZ OZ y), eq (pos n) y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct y.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (pos n) (oppZ y)) (_ : True)\n  (_ : match y with\n       | neg _ => False\n       | _ => True\n       end), eq (pos n) y"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (_ : eq (pos n) (oppZ OZ)) (_ : True) (_ : True), eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "rewrite H.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (oppZ OZ)", "n : nat"], "goal": "eq (pos n) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (oppZ OZ)", "n : nat"], "goal": "eq (oppZ OZ) OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) (pos n0)"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (pos n0))) (_ : True) (_ : True),\neq (pos n) (pos n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (neg n0)) (_ : True) (_ : True),\neq (pos n) (pos n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "congruence.", "context_before": {"fg_goals": [{"hypotheses": ["H0,H1 : True", "H : eq (pos n) (neg n0)", "n,n0 : nat"], "goal": "eq (pos n) (pos n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}, {"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (oppZ (neg n0))) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "tauto.", "context_before": {"fg_goals": [{"hypotheses": ["n,n0 : nat"], "goal": "forall (_ : eq (pos n) (pos n0)) (_ : True) (_ : False),\neq (pos n) (neg n0)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : leZ OZ (neg n))\n  (_ : leZ OZ y), eq (neg n) y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "forall (y : Z) (_ : eq (neg n) (oppZ y)) (_ : False)\n  (_ : match y with\n       | neg _ => False\n       | _ => True\n       end), eq (neg n) y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "rewrite H.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : match y with\n| neg _ => False\n| _ => True\nend", "H0 : False", "H : eq (neg n) (oppZ y)", "y : Z", "n : nat"], "goal": "eq (neg n) y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "easy.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : match y with\n| neg _ => False\n| _ => True\nend", "H0 : False", "H : eq (neg n) (oppZ y)", "y : Z", "n : nat"], "goal": "eq (oppZ y) y"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Zle.v", "Zle.", "\nLemma tech_lt_abs_OZ : forall x : Z, lt_absZ x (pos 0) -> x = OZ.\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : lt_absZ x (pos O)), eq x OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (x : Z) (_ : lt_absZ x (pos O)), eq x OZ"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
