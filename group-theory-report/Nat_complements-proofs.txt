[["Z/Nat_complements.v", "Nat_complements.", "\n(****************)\nLemma eq_gt_O_dec : forall n : nat, {n = 0} + {n > 0}.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, sumbool (eq n O) (gt n O)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction n.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, sumbool (eq n O) (gt n O)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "sumbool (eq O O) (gt O O)"}], "bg_goals": [{"hypotheses": ["IHn : sumbool (eq n O) (gt n O)", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct IHn.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : sumbool (eq n O) (gt n O)", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "subst.", "context_before": {"fg_goals": [{"hypotheses": ["e : eq n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "bg_goals": [{"hypotheses": ["g : gt n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "generalize O.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "sumbool (eq (S O) O) (gt (S O) O)"}], "bg_goals": [{"hypotheses": ["g : gt n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, sumbool (eq (S n) n) (gt (S n) n)"}], "bg_goals": [{"hypotheses": ["g : gt n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "sumbool (eq (S n) n) (gt (S n) n)"}], "bg_goals": [{"hypotheses": ["g : gt n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["g : gt n O", "n : nat"], "goal": "sumbool (eq (S n) O) (gt (S n) O)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Nat_complements.v", "Nat_complements.", "\n(********************)\nLemma technical_lemma :\n forall y m : nat, S (y * m + (y + m) + m) = S y * m + (S y + m).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall y m : nat,\neq\n  (S\n     (Init.Nat.add (Init.Nat.add (Init.Nat.mul y m) (Init.Nat.add y m))\n        m))\n  (Init.Nat.add (Init.Nat.mul (S y) m) (Init.Nat.add (S y) m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall y m : nat,\neq\n  (S\n     (Init.Nat.add (Init.Nat.add (Init.Nat.mul y m) (Init.Nat.add y m))\n        m))\n  (Init.Nat.add (Init.Nat.mul (S y) m) (Init.Nat.add (S y) m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["y,m : nat"], "goal": "eq\n  (S\n     (Init.Nat.add (Init.Nat.add (Init.Nat.mul y m) (Init.Nat.add y m))\n        m))\n  (Init.Nat.add (Init.Nat.mul (S y) m) (Init.Nat.add (S y) m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "ring.", "context_before": {"fg_goals": [{"hypotheses": ["y,m : nat"], "goal": "eq\n  (S\n     (Init.Nat.add (Init.Nat.add (Init.Nat.mul y m) (Init.Nat.add y m))\n        m))\n  (Init.Nat.add (Init.Nat.add m (Init.Nat.mul y m))\n     (S (Init.Nat.add y m)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Nat_complements.v", "Nat_complements.", "\n(************)\nLemma lt_succ : forall n m : nat, n <= S m -> {n <= m} + {n = S m}.\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : le n (S m)), sumbool (le n m) (eq n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : le n (S m)), sumbool (le n m) (eq n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Nat_complements.v", "Nat_complements.", "\n(***************)\nLemma minus_n_Sm : forall n m : nat, m < n -> pred (n - m) = n - S m.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : lt m n),\neq (Init.Nat.pred (Init.Nat.sub n m)) (Init.Nat.sub n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold lt.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : lt m n),\neq (Init.Nat.pred (Init.Nat.sub n m)) (Init.Nat.sub n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold Init.Nat.sub.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : le (S m) n),\neq (Init.Nat.pred (Init.Nat.sub n m)) (Init.Nat.sub n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction n.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n0 m0 : nat) {struct n0} : nat :=\n         match n0 with\n         | O => n0\n         | S k => match m0 with\n                  | O => n0\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n0 m0 : nat) {struct n0} : nat :=\n      match n0 with\n      | O => n0\n      | S k => match m0 with\n               | O => n0\n               | S l => sub k l\n               end\n      end) n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (m : nat) (_ : le (S m) O), eq (Init.Nat.pred O) O"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (m : nat) (_ : le (S m) O), eq O O"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : le (S m) O", "m : nat"], "goal": "eq O O"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction m.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall _ : le (S O) (S n),\neq (Init.Nat.pred (S n))\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n O)"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S n),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "m : nat", "IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall _ : le (S (S m)) (S n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "reflexivity.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) O), eq (Init.Nat.pred O) O"], "goal": "forall _ : le (S O) (S O), eq (Init.Nat.pred (S O)) O"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S n),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "m : nat", "IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall _ : le (S (S m)) (S n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))"}, {"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "n : nat"], "goal": "forall _ : le (S O) (S (S n)), eq (Init.Nat.pred (S (S n))) (S n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "n : nat"], "goal": "forall _ : le (S O) (S (S n)), eq (Init.Nat.pred (S (S n))) (S n)"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S n),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "m : nat", "IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall _ : le (S (S m)) (S n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S n),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "m : nat", "IHn : forall (m : nat) (_ : le (S m) n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m0 : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m0 with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))", "n : nat"], "goal": "forall _ : le (S (S m)) (S n),\neq\n  (Init.Nat.pred\n     ((fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l => sub k l\n                  end\n         end) n m))\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n (S m))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S O),\neq (Init.Nat.pred match m with\n                  | O => S O\n                  | S _ => O\n                  end) O", "m : nat", "IHn : forall (m : nat) (_ : le (S m) O), eq (Init.Nat.pred O) O"], "goal": "forall _ : le (S (S m)) (S O), eq (Init.Nat.pred O) O"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S (S n)\n     | S O => S n\n     | S (S l0) =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l1 => sub k l1\n                     end\n            end) n l0\n     end)\n  match m with\n  | O => S n\n  | S l =>\n      (fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l0 => sub k l0\n                  end\n         end) n l\n  end", "m : nat", "IHn : forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "n : nat"], "goal": "forall _ : le (S (S m)) (S (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["IHm : forall _ : le (S m) (S (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S (S n)\n     | S O => S n\n     | S (S l0) =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l1 => sub k l1\n                     end\n            end) n l0\n     end)\n  match m with\n  | O => S n\n  | S l =>\n      (fix sub (n m : nat) {struct n} : nat :=\n         match n with\n         | O => n\n         | S k => match m with\n                  | O => n\n                  | S l0 => sub k l0\n                  end\n         end) n l\n  end", "m : nat", "IHn : forall (m : nat) (_ : le (S m) (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m0 : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m0 with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m0 : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m0 with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)", "n : nat"], "goal": "forall _ : le (S (S m)) (S (S n)),\neq\n  (Init.Nat.pred\n     match m with\n     | O => S n\n     | S l =>\n         (fix sub (n m : nat) {struct n} : nat :=\n            match n with\n            | O => n\n            | S k => match m with\n                     | O => n\n                     | S l0 => sub k l0\n                     end\n            end) n l\n     end)\n  ((fix sub (n m : nat) {struct n} : nat :=\n      match n with\n      | O => n\n      | S k => match m with\n               | O => n\n               | S l => sub k l\n               end\n      end) n m)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Nat_complements.v", "Nat_complements.", "\n(**************)\nLemma lt_minus2 : forall n m : nat, n < m -> 0 < m - n.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction n.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (m : nat) (_ : lt O m), lt O (Init.Nat.sub m O)"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall (m : nat) (_ : lt (S n) m), lt O (Init.Nat.sub m (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct m.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O m", "m : nat"], "goal": "lt O (Init.Nat.sub m O)"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall (m : nat) (_ : lt (S n) m), lt O (Init.Nat.sub m (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O O"], "goal": "lt O (Init.Nat.sub O O)"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall (m : nat) (_ : lt (S n) m), lt O (Init.Nat.sub m (S n))"}, {"hypotheses": ["H : lt O (S m)", "m : nat"], "goal": "lt O (Init.Nat.sub (S m) O)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O (S m)", "m : nat"], "goal": "lt O (Init.Nat.sub (S m) O)"}], "bg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall (m : nat) (_ : lt (S n) m), lt O (Init.Nat.sub m (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction m.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall (m : nat) (_ : lt (S n) m), lt O (Init.Nat.sub m (S n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall _ : lt (S n) O, lt O (Init.Nat.sub O (S n))"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall _ : lt (S n) (S m), lt O (Init.Nat.sub (S m) (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold Init.Nat.sub.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt (S n) O", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "lt O (Init.Nat.sub O (S n))"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall _ : lt (S n) (S m), lt O (Init.Nat.sub (S m) (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "easy.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt (S n) O", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "lt O O"}], "bg_goals": [{"hypotheses": ["IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall _ : lt (S n) (S m), lt O (Init.Nat.sub (S m) (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "forall _ : lt (S n) (S m), lt O (Init.Nat.sub (S m) (S n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt (S n) (S m)", "IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "lt O (Init.Nat.sub (S m) (S n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intuition.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt (S n) (S m)", "IHm : forall _ : lt (S n) m, lt O (Init.Nat.sub m (S n))", "m : nat", "IHn : forall (m : nat) (_ : lt n m), lt O (Init.Nat.sub m n)", "n : nat"], "goal": "lt O (Init.Nat.sub m n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
