[["g2.v", "g2.", "\nTheorem auxsub :\n forall (H : Group U) (x : U), subgroup U H Gr -> In U (G_ U H) x -> In U G x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (H : Group U) (x : U) (_ : subgroup U H Gr)\n  (_ : In U (G_ U H) x), In U G x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (H : Group U) (x : U) (_ : subgroup U H Gr)\n  (_ : In U (G_ U H) x), In U G x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct H0.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : In U (G_ U H) x", "H0 : subgroup U H Gr", "x : U", "H : Group U"], "goal": "In U G x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H1 : In U (G_ U H) x", "H2 : eq (star_ U H) (star_ U Gr)", "H0 : Included U (G_ U H) (G_ U Gr)", "x : U", "H : Group U"], "goal": "In U G x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["g2.v", "g2.", "\nTheorem T4R1 :\n Setsubgroup U (Prod H K) Gr -> Included U (Prod K H) (Prod H K).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nIncluded U (Prod K H) (Prod H K)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nIncluded U (Prod K H) (Prod H K)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["g2.v", "g2.", "\nTheorem T_1_6_8 :\n Same_set U (Prod H K) (Prod K H) <-> Setsubgroup U (Prod H K) Gr.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "iff (Same_set U (Prod H K) (Prod K H)) (Setsubgroup U (Prod H K) Gr)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "split.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "iff (Same_set U (Prod H K) (Prod K H)) (Setsubgroup U (Prod H K) Gr)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Same_set U (Prod H K) (Prod K H),\nSetsubgroup U (Prod H K) Gr"}], "bg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nSame_set U (Prod H K) (Prod K H)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : Same_set U (Prod H K) (Prod K H)", "subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "Setsubgroup U (Prod H K) Gr"}], "bg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nSame_set U (Prod H K) (Prod K H)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nSame_set U (Prod H K) (Prod K H)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "econstructor.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : Setsubgroup U (Prod H K) Gr", "subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "Same_set U (Prod H K) (Prod K H)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : Setsubgroup U (Prod H K) Gr", "subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "Included U (Prod H K) (Prod K H)"}], "bg_goals": [{"hypotheses": ["H0 : Setsubgroup U (Prod H K) Gr", "subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "Included U (Prod K H) (Prod H K)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H0 : Setsubgroup U (Prod H K) Gr", "subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "Included U (Prod K H) (Prod H K)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["g2.v", "g2.", "\nTheorem T4R : Setsubgroup U (Prod H K) Gr -> Included U (Prod H K) (Prod K H).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nIncluded U (Prod H K) (Prod K H)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Setsubgroup U (Prod H K) Gr,\nIncluded U (Prod H K) (Prod K H)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["g2.v", "g2.", "\nTheorem T4 : Same_set U (Prod H K) (Prod K H) -> Setsubgroup U (Prod H K) Gr.\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Same_set U (Prod H K) (Prod K H),\nSetsubgroup U (Prod H K) Gr"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": ["subK : subgroup U K Gr", "subH : subgroup U H Gr", "H,K : Group U"], "goal": "forall _ : Same_set U (Prod H K) (Prod K H),\nSetsubgroup U (Prod H K) Gr"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
