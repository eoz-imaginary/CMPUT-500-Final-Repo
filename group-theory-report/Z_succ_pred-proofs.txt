[["Z/Z_succ_pred.v", "Z_succ_pred.", "\nLemma pred_succZ : forall x : Z, predZ (succZ x) = x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (predZ (succZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (predZ (succZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold predZ.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq (predZ (succZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq\n  match succZ x with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq\n  match succZ OZ with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match succZ (pos n) with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (pos n)"}, {"hypotheses": ["n : nat"], "goal": "eq\n  match succZ (neg n) with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "reflexivity.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match succZ (pos n) with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match succZ (neg n) with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match succZ (neg n) with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match match n with\n        | O => OZ\n        | S m => neg m\n        end with\n  | OZ => neg O\n  | pos O => OZ\n  | pos (S m) => pos m\n  | neg n => neg (S n)\n  end (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq (neg O) (neg O)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg (S n)) (neg (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg (S n)) (neg (S n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Z_succ_pred.v", "Z_succ_pred.", "\nLemma succ_predZ : forall x : Z, succZ (predZ x) = x.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (succZ (predZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (succZ (predZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold succZ.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq (succZ (predZ x)) x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq\n  match predZ x with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end x"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "reflexivity.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq\n  match predZ OZ with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end OZ"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (pos n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (pos n)"}, {"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (pos n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match match n with\n        | O => OZ\n        | S m => pos m\n        end with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq IZ (pos O)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}, {"hypotheses": ["n : nat"], "goal": "eq (pos (S n)) (pos (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (pos (S n)) (pos (S n))"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg n) (neg n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Z_succ_pred.v", "Z_succ_pred.", "\nLemma succ_pred_pred_succZ : forall x : Z, succZ (predZ x) = predZ (succZ x).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (succZ (predZ x)) (predZ (succZ x))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall x : Z, eq (succZ (predZ x)) (predZ (succZ x))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold succZ.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq (succZ (predZ x)) (predZ (succZ x))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct x.", "context_before": {"fg_goals": [{"hypotheses": ["x : Z"], "goal": "eq\n  match predZ x with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end\n  (predZ\n     match x with\n     | OZ => IZ\n     | pos n => pos (S n)\n     | neg O => OZ\n     | neg (S m) => neg m\n     end)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "reflexivity.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq\n  match predZ OZ with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ IZ)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (pos n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ (pos (S n)))"}, {"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (pos n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ (pos (S n)))"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match match n with\n        | O => OZ\n        | S m => pos m\n        end with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (pos n)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq IZ (pos O)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}, {"hypotheses": ["n : nat"], "goal": "eq (pos (S n)) (pos (S n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (pos (S n)) (pos (S n))"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq\n  match predZ (neg n) with\n  | OZ => IZ\n  | pos n => pos (S n)\n  | neg O => OZ\n  | neg (S m) => neg m\n  end (predZ match n with\n             | O => OZ\n             | S m => neg m\n             end)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "destruct n.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg n) (predZ match n with\n                  | O => OZ\n                  | S m => neg m\n                  end)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "eq (neg O) (predZ OZ)"}], "bg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg (S n)) (predZ (neg n))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (neg (S n)) (predZ (neg n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Z_succ_pred.v", "Z_succ_pred.", "\nLemma tech_succ_posOZ : forall n : nat, succZ (posOZ n) = pos n.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, eq (succZ (posOZ n)) (pos n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall n : nat, eq (succZ (posOZ n)) (pos n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "rewrite <- succ_predZ.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (succZ (posOZ n)) (pos n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["n : nat"], "goal": "eq (succZ (posOZ n)) (succZ (predZ (pos n)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["Z/Z_succ_pred.v", "Z_succ_pred.", "\nLemma tech_pred_posZ : forall n : nat, 0 < n -> predZ (pos n) = pos (pred n).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n : nat) (_ : lt O n),\neq (predZ (pos n)) (pos (Init.Nat.pred n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "induction n.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (n : nat) (_ : lt O n),\neq (predZ (pos n)) (pos (Init.Nat.pred n))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "easy.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall _ : lt O O, eq (predZ (pos O)) (pos (Init.Nat.pred O))"}], "bg_goals": [{"hypotheses": ["IHn : forall _ : lt O n, eq (predZ (pos n)) (pos (Init.Nat.pred n))", "n : nat"], "goal": "forall _ : lt O (S n),\neq (predZ (pos (S n))) (pos (Init.Nat.pred (S n)))"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": ["IHn : forall _ : lt O n, eq (predZ (pos n)) (pos (Init.Nat.pred n))", "n : nat"], "goal": "forall _ : lt O (S n),\neq (predZ (pos (S n))) (pos (Init.Nat.pred (S n)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "unfold predZ.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O (S n)", "IHn : forall _ : lt O n, eq (predZ (pos n)) (pos (Init.Nat.pred n))", "n : nat"], "goal": "eq (predZ (pos (S n))) (pos (Init.Nat.pred (S n)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "simpl.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O (S n)", "IHn : forall _ : lt O n, eq (predZ (pos n)) (pos (Init.Nat.pred n))", "n : nat"], "goal": "eq (pos n) (pos (Init.Nat.pred (S n)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : lt O (S n)", "IHn : forall _ : lt O n, eq (predZ (pos n)) (pos (Init.Nat.pred n))", "n : nat"], "goal": "eq (pos n) (pos n)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
