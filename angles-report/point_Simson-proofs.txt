[["point_Simson.v", "point_Simson.", " \nLemma colineaire_sym : forall u v : V, colineaire u v -> colineaire v u.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : colineaire u v), colineaire v u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : colineaire u v), colineaire v u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_Simson.v", "point_Simson.", " \nLemma orthogonal_opp : forall u v : V, orthogonal u v -> orthogonal u (opp v).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : orthogonal u v), orthogonal u (opp v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : orthogonal u v), orthogonal u (opp v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_Simson.v", "point_Simson.", " \nLemma colineaire_modulo_pi :\n forall u v u' v' : V,\n colineaire u u' ->\n colineaire v v' -> R (double (cons u' v')) (double (cons u v)).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v u' v' : V) (_ : colineaire u u') (_ : colineaire v v'),\nR (double (cons u' v')) (double (cons u v))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v u' v' : V) (_ : colineaire u u') (_ : colineaire v v'),\nR (double (cons u' v')) (double (cons u v))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_Simson.v", "point_Simson.", " \nLemma projete_ortho_cote :\n forall A B C M P Q T : PO,\n colineaire (vec C A) (vec C Q) ->\n colineaire (vec P C) (vec P B) ->\n colineaire (vec B A) (vec B T) ->\n orthogonal (vec T M) (vec T B) ->\n orthogonal (vec P M) (vec P B) ->\n orthogonal (vec Q M) (vec Q C) ->\n R (double (cons (vec P Q) (vec P T)))\n   (plus (double (cons (vec C A) (vec C M)))\n      (double (cons (vec B M) (vec B A)))).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C M P Q T : PO) (_ : colineaire (vec C A) (vec C Q))\n  (_ : colineaire (vec P C) (vec P B))\n  (_ : colineaire (vec B A) (vec B T))\n  (_ : orthogonal (vec T M) (vec T B))\n  (_ : orthogonal (vec P M) (vec P B))\n  (_ : orthogonal (vec Q M) (vec Q C)),\nR (double (cons (vec P Q) (vec P T)))\n  (plus (double (cons (vec C A) (vec C M)))\n     (double (cons (vec B M) (vec B A))))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C M P Q T : PO) (_ : colineaire (vec C A) (vec C Q))\n  (_ : colineaire (vec P C) (vec P B))\n  (_ : colineaire (vec B A) (vec B T))\n  (_ : orthogonal (vec T M) (vec T B))\n  (_ : orthogonal (vec P M) (vec P B))\n  (_ : orthogonal (vec Q M) (vec Q C)),\nR (double (cons (vec P Q) (vec P T)))\n  (plus (double (cons (vec C A) (vec C M)))\n     (double (cons (vec B M) (vec B A))))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_Simson.v", "point_Simson.", " \nTheorem droite_Simson :\n forall A B C M P Q T : PO,\n ~ colineaire (vec C A) (vec C M) ->\n colineaire (vec C A) (vec C Q) ->\n colineaire (vec P C) (vec P B) ->\n colineaire (vec B A) (vec B T) ->\n orthogonal (vec T M) (vec T B) ->\n orthogonal (vec P M) (vec P B) ->\n orthogonal (vec Q M) (vec Q C) ->\n (colineaire (vec P Q) (vec P T) <-> sont_cocycliques C A M B).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C M P Q T : PO) (_ : not (colineaire (vec C A) (vec C M)))\n  (_ : colineaire (vec C A) (vec C Q))\n  (_ : colineaire (vec P C) (vec P B))\n  (_ : colineaire (vec B A) (vec B T))\n  (_ : orthogonal (vec T M) (vec T B))\n  (_ : orthogonal (vec P M) (vec P B))\n  (_ : orthogonal (vec Q M) (vec Q C)),\niff (colineaire (vec P Q) (vec P T)) (sont_cocycliques C A M B)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C M P Q T : PO) (_ : not (colineaire (vec C A) (vec C M)))\n  (_ : colineaire (vec C A) (vec C Q))\n  (_ : colineaire (vec P C) (vec P B))\n  (_ : colineaire (vec B A) (vec B T))\n  (_ : orthogonal (vec T M) (vec T B))\n  (_ : orthogonal (vec P M) (vec P B))\n  (_ : orthogonal (vec Q M) (vec Q C)),\niff (colineaire (vec P Q) (vec P T)) (sont_cocycliques C A M B)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_Simson.v", "point_Simson.", " \nLemma orthogonal_colineaire :\n forall u v w : V, orthogonal u v -> colineaire v w -> orthogonal u w.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w : V) (_ : orthogonal u v) (_ : colineaire v w),\northogonal u w"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w : V) (_ : orthogonal u v) (_ : colineaire v w),\northogonal u w"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
