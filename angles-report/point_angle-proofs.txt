[["point_angle.v", "point_angle.", " \nLemma permute : forall u v : V, R (plus (cons u v) (cons v u)) zero.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus (cons u v) (cons v u)) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus (cons u v) (cons v u)) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma opp_opp : forall u : V, vR (opp (opp u)) u.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u : V, vR (opp (opp u)) u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u : V, vR (opp (opp u)) u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma oppu_u : forall u : V, R (cons (opp u) u) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u : V, R (cons (opp u) u) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u : V, R (cons (opp u) u) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma pi_plus_pi : R (plus pi pi) zero.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (plus pi pi) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (plus pi pi) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma u_oppv : forall u v : V, R (cons u (opp v)) (plus (cons u v) pi).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons u (opp v)) (plus (cons u v) pi)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons u (opp v)) (plus (cons u v) pi)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma oppu_v : forall u v : V, R (cons (opp u) v) (plus pi (cons u v)).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons (opp u) v) (plus pi (cons u v))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons (opp u) v) (plus pi (cons u v))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma Chasles_2 :\n forall u v w t : V,\n R (cons u t) (plus (cons u v) (plus (cons v w) (cons w t))).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w t : V,\nR (cons u t) (plus (cons u v) (plus (cons v w) (cons w t)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w t : V,\nR (cons u t) (plus (cons u v) (plus (cons v w) (cons w t)))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma plus_assoc :\n forall a b c : AV, R (plus a (plus b c)) (plus (plus a b) c).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c : AV, R (plus a (plus b c)) (plus (plus a b) c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c : AV, R (plus a (plus b c)) (plus (plus a b) c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma compatible_croix :\n forall a b c d : AV, R a b -> R c d -> R (plus a d) (plus b c).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b c d : AV) (_ : R a b) (_ : R c d), R (plus a d) (plus b c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b c d : AV) (_ : R a b) (_ : R c d), R (plus a d) (plus b c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma plus_zero : forall u v : V, R (plus (cons u v) zero) (cons u v).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus (cons u v) zero) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus (cons u v) zero) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma zero_plus : forall u v : V, R (plus zero (cons u v)) (cons u v).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus zero (cons u v)) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (plus zero (cons u v)) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma pi_plus_zero : R (plus pi zero) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (plus pi zero) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (plus pi zero) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma zero_plus_a : forall a : AV, R (plus zero a) a.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a : AV, R (plus zero a) a"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a : AV, R (plus zero a) a"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma R_permute :\n forall u v w t : V, R (cons u v) (cons w t) -> R (cons v u) (cons t w).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t : V) (_ : R (cons u v) (cons w t)),\nR (cons v u) (cons t w)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t : V) (_ : R (cons u v) (cons w t)),\nR (cons v u) (cons t w)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma regulier_cons :\n forall u v w t s : V,\n R (cons u v) (cons u w) ->\n R (cons u t) (cons u s) -> R (cons v t) (cons w s).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t s : V) (_ : R (cons u v) (cons u w))\n  (_ : R (cons u t) (cons u s)), R (cons v t) (cons w s)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t s : V) (_ : R (cons u v) (cons u w))\n  (_ : R (cons u t) (cons u s)), R (cons v t) (cons w s)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma regulier :\n forall a b c d : AV, R a c -> R (plus a b) (plus c d) -> R b d.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b c d : AV) (_ : R a c) (_ : R (plus a b) (plus c d)), R b d"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b c d : AV) (_ : R a c) (_ : R (plus a b) (plus c d)), R b d"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma oppu_oppv : forall u v : V, R (cons (opp u) (opp v)) (cons u v).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons (opp u) (opp v)) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v : V, R (cons (opp u) (opp v)) (cons u v)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma rotation :\n forall u v u' v' : V, R (cons u u') (cons v v') -> R (cons u v) (cons u' v').\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v u' v' : V) (_ : R (cons u u') (cons v v')),\nR (cons u v) (cons u' v')"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v u' v' : V) (_ : R (cons u u') (cons v v')),\nR (cons u v) (cons u' v')"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma calcul : forall a b c : AV, R (plus a (plus b c)) (plus b (plus a c)).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c : AV, R (plus a (plus b c)) (plus b (plus a c))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c : AV, R (plus a (plus b c)) (plus b (plus a c))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma calcul2 :\n forall a b c d : AV,\n R (plus (plus a (plus b c)) d) (plus (plus a (plus b d)) c).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c d : AV,\nR (plus (plus a (plus b c)) d) (plus (plus a (plus b d)) c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b c d : AV,\nR (plus (plus a (plus b c)) d) (plus (plus a (plus b d)) c)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma somme_pi :\n forall u v w : V,\n R (plus (cons u v) (plus (cons w (opp u)) (cons (opp v) (opp w)))) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w : V,\nR (plus (cons u v) (plus (cons w (opp u)) (cons (opp v) (opp w)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w : V,\nR (plus (cons u v) (plus (cons w (opp u)) (cons (opp v) (opp w)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nTheorem somme_triangle :\n forall A B C : PO,\n R\n   (plus (cons (vec A B) (vec A C))\n      (plus (cons (vec B C) (vec B A)) (cons (vec C A) (vec C B)))) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall A B C : PO,\nR\n  (plus (cons (vec A B) (vec A C))\n     (plus (cons (vec B C) (vec B A)) (cons (vec C A) (vec C B)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall A B C : PO,\nR\n  (plus (cons (vec A B) (vec A C))\n     (plus (cons (vec B C) (vec B A)) (cons (vec C A) (vec C B)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma reflexion :\n forall i u v u' v' : V,\n R (cons u' i) (cons i u) ->\n R (cons v' i) (cons i v) -> R (cons u v) (cons v' u').\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (i u v u' v' : V) (_ : R (cons u' i) (cons i u))\n  (_ : R (cons v' i) (cons i v)), R (cons u v) (cons v' u')"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (i u v u' v' : V) (_ : R (cons u' i) (cons i u))\n  (_ : R (cons v' i) (cons i v)), R (cons u v) (cons v' u')"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma triangle_isocele :\n forall A B C : PO,\n isocele A B C ->\n R (plus (cons (vec A B) (vec A C)) (double (cons (vec B C) (vec B A)))) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C : PO) (_ : isocele A B C),\nR (plus (cons (vec A B) (vec A C)) (double (cons (vec B C) (vec B A))))\n  pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C : PO) (_ : isocele A B C),\nR (plus (cons (vec A B) (vec A C)) (double (cons (vec B C) (vec B A))))\n  pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma somme_permute :\n forall u v w : V,\n R (plus (cons v u) (plus (cons (opp u) w) (cons (opp w) (opp v)))) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w : V,\nR (plus (cons v u) (plus (cons (opp u) w) (cons (opp w) (opp v)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall u v w : V,\nR (plus (cons v u) (plus (cons (opp u) w) (cons (opp w) (opp v)))) pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma double_zero : R (double zero) zero.\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (double zero) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "apply zero_plus_a.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "R (double zero) zero"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma isocele_permute :\n forall A B C : PO,\n isocele A B C ->\n R (plus (cons (vec A C) (vec A B)) (double (cons (vec B A) (vec B C)))) pi.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C : PO) (_ : isocele A B C),\nR (plus (cons (vec A C) (vec A B)) (double (cons (vec B A) (vec B C))))\n  pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (A B C : PO) (_ : isocele A B C),\nR (plus (cons (vec A C) (vec A B)) (double (cons (vec B A) (vec B C))))\n  pi"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma double_permute :\n forall u v w t : V,\n R (double (cons u v)) (double (cons w t)) ->\n R (double (cons v u)) (double (cons t w)).\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t : V) (_ : R (double (cons u v)) (double (cons w t))),\nR (double (cons v u)) (double (cons t w))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v w t : V) (_ : R (double (cons u v)) (double (cons w t))),\nR (double (cons v u)) (double (cons t w))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma R_double : forall a b : AV, R a b -> R (double a) (double b).\n"], {"status": "SUCCESS", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b : AV) (_ : R a b), R (double a) (double b)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "intros.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (a b : AV) (_ : R a b), R (double a) (double b)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eapply compatible_croix.", "context_before": {"fg_goals": [{"hypotheses": ["H : R a b", "a,b : AV"], "goal": "R (double a) (double b)"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : R a b", "a,b : AV"], "goal": "R a b"}], "bg_goals": [{"hypotheses": ["H : R a b", "a,b : AV"], "goal": "R b a"}], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "eauto.", "context_before": {"fg_goals": [{"hypotheses": ["H : R a b", "a,b : AV"], "goal": "R b a"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Qed.", "context_before": {"fg_goals": [], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma orthogonal_sym : forall u v : V, orthogonal u v -> orthogonal v u.\n"], {"status": "FAILURE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : orthogonal u v), orthogonal v u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall (u v : V) (_ : orthogonal u v), orthogonal v u"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
[["point_angle.v", "point_angle.", " \nLemma double_plus :\n forall a b : AV, R (double (plus a b)) (plus (double a) (double b)).\n"], {"status": "INCOMPLETE", "commands": [{"tactic": "Proof.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b : AV, R (double (plus a b)) (plus (double a) (double b))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}, {"tactic": "Admitted.", "context_before": {"fg_goals": [{"hypotheses": [], "goal": "forall a b : AV, R (double (plus a b)) (plus (double a) (double b))"}], "bg_goals": [], "shelved_goals": [], "given_up_goals": []}}]}]
